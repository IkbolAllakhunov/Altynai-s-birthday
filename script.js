// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentMemoryIndex = 0;
let confettiActive = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    const cake = document.querySelector('.birthday-cake');
    if (cake) {
        cake.addEventListener('click', lightCandles);
    }
    setupAudio();
    initializeConfetti();
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∂–∏–≥–∞–Ω–∏—è —Å–≤–µ—á–µ–π
function lightCandles() {
    const cake = document.querySelector('.birthday-cake');
    const candles = document.querySelectorAll('.candle');
    
    cake.classList.add('lit');
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–∂–∏–≥–∞–Ω–∏—è —Å–≤–µ—á–µ–π –ø–æ –æ—á–µ—Ä–µ–¥–∏
    candles.forEach((candle, index) => {
        setTimeout(() => {
            candle.style.animation = 'flicker 0.5s infinite alternate';
            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –æ–≥–Ω—è
            candle.innerHTML = 'üî•';
        }, index * 200);
    });
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
    playSound('candle');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
    setTimeout(() => {
        createConfetti();
    }, 1000);
}

// –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞
function startCelebration() {
    const welcomeScreen = document.getElementById('welcomeScreen');
    const mainCelebration = document.getElementById('mainCelebration');
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    welcomeScreen.style.animation = 'fadeOut 0.5s ease-out forwards';
    
    setTimeout(() => {
        welcomeScreen.classList.add('hidden');
        mainCelebration.classList.remove('hidden');
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        mainCelebration.style.animation = 'fadeInUp 1s ease-out';
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
        createConfetti();
        
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
        playSound('celebration');
        
    // (—É–±—Ä–∞–Ω–∞ –º–∏–Ω–∏-–∏–≥—Ä–∞)
        
    }, 500);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É–¥–∏–æ
function setupAudio() {
    // –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–≤—É–∫–æ–≤
    const audioContext = new (window.AudioContext || window.webkitAudioContext)();
    
    // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–≤—É–∫–∞
    window.playSound = function(type) {
        try {
            const oscillator = audioContext.createOscillator();
            const gainNode = audioContext.createGain();
            
            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);
            
            switch(type) {
                case 'candle':
                    oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
                    oscillator.frequency.exponentialRampToValueAtTime(1200, audioContext.currentTime + 0.1);
                    break;
                case 'celebration':
                    oscillator.frequency.setValueAtTime(523, audioContext.currentTime); // C5
                    oscillator.frequency.setValueAtTime(659, audioContext.currentTime + 0.2); // E5
                    oscillator.frequency.setValueAtTime(784, audioContext.currentTime + 0.4); // G5
                    break;
                case 'heart':
                    oscillator.frequency.setValueAtTime(600, audioContext.currentTime);
                    break;
            }
            
            gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
            gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3);
            
            oscillator.start(audioContext.currentTime);
            oscillator.stop(audioContext.currentTime + 0.3);
        } catch(e) {
            console.log('Audio not supported');
        }
    };
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
function initializeConfetti() {
    const canvas = document.getElementById('confetti');
    if (!canvas) return;
    
    const ctx = canvas.getContext('2d');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞–Ω–≤–∞—Å–∞
    function resizeCanvas() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    }
    
    resizeCanvas();
    window.addEventListener('resize', resizeCanvas);
    
    window.createConfetti = function() {
        if (confettiActive) return;
        confettiActive = true;
        
        const confettiPieces = [];
        const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#fd79a8'];
        
        // –°–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
        for (let i = 0; i < 50; i++) {
            confettiPieces.push({
                x: Math.random() * canvas.width,
                y: -10,
                vx: (Math.random() - 0.5) * 4,
                vy: Math.random() * 3 + 2,
                color: colors[Math.floor(Math.random() * colors.length)],
                size: Math.random() * 8 + 4,
                rotation: Math.random() * 360,
                rotationSpeed: (Math.random() - 0.5) * 10
            });
        }
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
        function animateConfetti() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            
            confettiPieces.forEach((piece, index) => {
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é
                piece.x += piece.vx;
                piece.y += piece.vy;
                piece.rotation += piece.rotationSpeed;
                
                // –†–∏—Å—É–µ–º —á–∞—Å—Ç–∏—Ü—É
                ctx.save();
                ctx.translate(piece.x, piece.y);
                ctx.rotate(piece.rotation * Math.PI / 180);
                ctx.fillStyle = piece.color;
                ctx.fillRect(-piece.size/2, -piece.size/2, piece.size, piece.size);
                ctx.restore();
                
                // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–ø–∞–ª–∏
                if (piece.y > canvas.height + 20) {
                    confettiPieces.splice(index, 1);
                }
            });
            
            if (confettiPieces.length > 0) {
                requestAnimationFrame(animateConfetti);
            } else {
                confettiActive = false;
            }
        }
        
        animateConfetti();
    };
}

// (–º–∏–Ω–∏-–∏–≥—Ä–∞ –∏ —Å—á–µ—Ç —É–¥–∞–ª–µ–Ω—ã)

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–æ–º –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π
window.changeMemory = function(direction) {
    const memories = document.querySelectorAll('.memory-item');
    const totalMemories = memories.length;
    
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å
    memories[currentMemoryIndex].classList.remove('active');
    
    // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
    currentMemoryIndex += direction;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
    if (currentMemoryIndex >= totalMemories) {
        currentMemoryIndex = 0;
    } else if (currentMemoryIndex < 0) {
        currentMemoryIndex = totalMemories - 1;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å
    memories[currentMemoryIndex].classList.add('active');
    
    // –ó–≤—É–∫ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –º—è–≥–∫–∏–º
    playSound('celebration');
};

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
window.restartCelebration = function() {
    const welcomeScreen = document.getElementById('welcomeScreen');
    const mainCelebration = document.getElementById('mainCelebration');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
    mainCelebration.classList.add('hidden');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
    welcomeScreen.classList.remove('hidden');
    welcomeScreen.style.animation = 'fadeInUp 1s ease-out';
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const cake = document.querySelector('.birthday-cake');
    if (cake) {
        cake.classList.remove('lit');
        const candles = document.querySelectorAll('.candle');
        candles.forEach(candle => {
            candle.style.animation = '';
            candle.innerHTML = 'üïØÔ∏è';
        });
    }
    
    // (–º–∏–Ω–∏-–∏–≥—Ä–∞ —É–¥–∞–ª–µ–Ω–∞)
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
    setTimeout(() => {
        createConfetti();
    }, 500);
};

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ JavaScript
const style = document.createElement('style');
style.textContent = `
    @keyframes fadeOut {
        from {
            opacity: 1;
            transform: translateY(0);
        }
        to {
            opacity: 0;
            transform: translateY(-30px);
        }
    }
    
    .game-heart {
        position: relative;
        transition: all 0.3s ease;
    }
    
    .memory-item {
        transition: all 0.5s ease-in-out;
    }
`;
document.head.appendChild(style);

// –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–±—Ä–∞—Ü–∏—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
function vibrate(pattern = [100]) {
    if ('vibrate' in navigator) {
        navigator.vibrate(pattern);
    }
}

// (–≤–∏–±—Ä–∞—Ü–∏—è –¥–ª—è –∫–ª–∏–∫–∞ –ø–æ game-heart —É–¥–∞–ª–µ–Ω–∞)

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π
setInterval(() => {
    const memories = document.querySelectorAll('.memory-item');
    if (memories.length > 1) {
        changeMemory(1);
    }
}, 5000);

// –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
window.addEventListener('scroll', function() {
    const scrolled = window.pageYOffset;
    const hearts = document.querySelectorAll('.heart');
    const sparkles = document.querySelectorAll('.sparkle');
    
    hearts.forEach((heart, index) => {
        const speed = 0.5 + (index * 0.1);
        heart.style.transform = `translateY(${scrolled * speed}px)`;
    });
    
    sparkles.forEach((sparkle, index) => {
        const speed = 0.3 + (index * 0.05);
        sparkle.style.transform = `translateY(${scrolled * speed}px)`;
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Å–∞–Ω–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
let touchStartY = 0;
let touchEndY = 0;

document.addEventListener('touchstart', function(e) {
    touchStartY = e.changedTouches[0].screenY;
});

document.addEventListener('touchend', function(e) {
    touchEndY = e.changedTouches[0].screenY;
    handleSwipe();
});

function handleSwipe() {
    const swipeThreshold = 50;
    const diff = touchStartY - touchEndY;
    
    if (Math.abs(diff) > swipeThreshold) {
        if (diff > 0) {
            // Swipe up - —Å–ª–µ–¥—É—é—â–µ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ
            changeMemory(1);
        } else {
            // Swipe down - –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ
            changeMemory(-1);
        }
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞–∫–ª–æ–Ω–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
if (window.DeviceOrientationEvent) {
    window.addEventListener('deviceorientation', function(e) {
        const hearts = document.querySelectorAll('.heart');
        const tilt = e.gamma * 0.1; // –ù–∞–∫–ª–æ–Ω –ø–æ –æ—Å–∏ X
        
        hearts.forEach((heart, index) => {
            const multiplier = 0.5 + (index * 0.1);
            heart.style.transform += ` translateX(${tilt * multiplier}px)`;
        });
    });
}

console.log('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–æ! üéÇ');

